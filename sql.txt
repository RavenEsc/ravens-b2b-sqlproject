/* This Data Definition Statement is for ensuring there 
are no previously made tables with the similar names */
DROP TABLE IF EXISTS employee, contact, address;

/* This Data Definition Statement creates a table 
'employee' and adds the following columns with set
data types */
CREATE TABLE employee (
    id INT,
    fname VARCHAR,
    lname VARCHAR,
    age INT,
    hiredate DATE
);

/* This Data Manipulation Statement adds data to the 
correspoding table */
INSERT INTO employee (id, fname, lname, age, hiredate)
VALUES 
(01, "Alan", "Palmer", 32, "12-15-2019"),
(02, "Susan", "Shepard", 28, "07-21-2015"),
(03, "Justin", "Ward", 43, "08-24-2017"),
(04, "Alan", "Smith", 30, "06-22-17"),
(05, "James", "Betternot", 26, "06-22-17"),
(06, "Ralph", "White",  44,  "06-23-17"),
(07, "Leonard", "Nimoy", 72, "12-14-07"),
(08, "Janice", "Rand",  61, "07-06-16"),
(09, "Harry", "Mudd", 65, "07-06-20"),
(10, "Hikaru", "Sulu", 58, "03-21-15"),
(11, "James", "Kirk",  59, "01-02-14"),
(12, "Leonard", "McCoy", 65, "08-21-15"),
(13, "Pavel", "Chekov",  44, "10-15-14"),
(14, "Christopher", "Pike", 32, "11-24-14"),
(15, "Darth", "Vader", 124, "03-22-15"),
(16, "Boba", "Fett", 49, "03-22-15"),
(17, "Luke", "Skywalker", 66, "11-11-19"),
(18, "Han", "Solo", 73, "02-03-12"),
(19, "Kylo", "Ren",  34, "06-14-20"),
(20, "Galen", "Erso",  55, "06-14-20");

/* This Data Definition Statement creates a table 
'address' and adds the following columns with set
data types */
CREATE TABLE address (
    id INT,
    address1 VARCHAR,
    address2 VARCHAR,
    city VARCHAR,
    state VARCHAR,
    zip VARCHAR
);

/* This Data Manipulation Statement adds data to the 
correspoding table */
INSERT INTO address (id, address1, address2, city, state, zip)
VALUES
(01, "1211 Sudan St", "n/a", "Mobile", "AL", "36609"),

(02, "4800 Barkshire Dr", "n/a", "Pace", "FL", "32571"),

(03, "12 Nutmeg Ct", "n/a", "Culver City", "CA", "90211"),

(04, "2142 Elmwood Pl", "n/a", "Johnson City", "TN", "37112"),

(05, "777 Heavenly Ln", "Box 13", "Pike City", "MN", "50877");

/* This Data Definition Statement creates a table 
'contact' and adds the following columns with set
data types */
CREATE TABLE contact (
    id INT,
    cellphone VARCHAR,
    homephone VARCHAR,
    email VARCHAR
);

/* This Data Manipulation Statement adds data to the 
correspoding table */
INSERT INTO contact (id, cellphone, homephone, email)
VALUES
(01, "5121325343", "5125234234", "apalmer@yachtmail.com"),

(02, "5129739834", "5129847873", "sshepard@yorkdevtraining.com"),

(03, "6453898502", "6459872345",  "jsward2007@yahoo.com"),

(04, "8763238756", "8763736548", "alsmith999@gmail.com"),

(05, "8880345966", "8888567987", "james.betternot@hotmail.com"),

(06, "3322827765", "3328760098", "ralph.white264@aol.com");

/* This Data Manipulation Statement join the 
'employee' and 'address' tables on one column 'id' 
and returns 'fname', 'lname', 'age', 'city', 'state' 
where fname equals 'Alan' */
SELECT fname, lname, age, city, state
FROM employee
INNER JOIN address ON employee.id = address.id
WHERE fname = "Alan";

/* This Data Manipulation Statement joins 'employee', 'address', 
and 'contact' 'tables' on 'id' and returns 'fname', 'lname', 
'age', 'city', 'state', 'email' where 'email' equals 
'james.betternot@hotmail.com' */
SELECT employee.fname, employee.lname, employee.age, address.city, address.state, contact.email
FROM employee
INNER JOIN address ON employee.id = address.id
INNER JOIN contact ON employee.id = contact.id
WHERE email = "james.betternot@hotmail.com";

/* This Data Manipulation Statement changes the 'cellphone' 
data in the 'contact' table where the 'id' matches Susan Shepard's 
'id' by performing a subquery on the 'id' where 'fname' matches 
'Susan' and 'lname' matches 'Shepard' */
UPDATE contact
SET cellphone = "4383991212"
WHERE id = (
    SELECT id
    FROM employee
    WHERE employee.fname = "Susan" AND employee.lname = "Shepard"
);

/* This Data Manipulation Statement utilizes a nested query 
to find all data based on a combination of 'fname' and 'lname' 
(with 'name' alias) of the joined tables 'address' and 'contact' 
where it equals Susan Shepard */
SELECT *
FROM (
    SELECT *, CONCAT(fname, " ", lname) AS name
    FROM employee
    INNER JOIN address ON employee.id = address.id
    INNER JOIN contact ON employee.id = contact.id
)
WHERE name = "Susan Shepard";